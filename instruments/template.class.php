<?php

/*
=====================================
Автор идеи: Игорь Ткаченко (Alone)
=====================================
*/

class TemplateParser {
	private $lang;

	public function __construct() {
		global $MCR_LANG_TPL;
		$this->lang = $MCR_LANG_TPL;
	}

	/*=== Старый Шаблонизатор ===*/
	public function parse($html_unparsed) {/*=== Проверка целостности языкового массива ===*/
		if (!$this->lang) {
			die('Файл языкового пакета битый/не найден');//Выводим ошибку, если файл пуст или не найден
			exit;
		}

		/*=== Заменяем все найденые совпадения на нужные данные ===*/
		$html_parsed = str_replace(array_keys($this->lang), array_values($this->lang), $html_unparsed); //Производим замену
		return $html_parsed; //отдаем результат
	}
	/*=== Шаблонизатор. Ничем не тличается, правда? ===*/
	public static function ParseText($html_unparsed) {
		global $MCR_LANG_TPL;
		if (!$MCR_LANG_TPL) {/*=== Проверка целостности языкового массива ===*/
			die('Файл языкового пакета битый/не найден');//Выводим ошибку, если файл пуст или не найден
			exit;
		}

		/*=== Заменяем все найденые совпадения на нужные данные ===*/
		$html_parsed = str_replace(array_keys($MCR_LANG_TPL), array_values($MCR_LANG_TPL), $html_unparsed); //Производим замену
		return $html_parsed; //отдаем результат
	}
	public static function MakeCache($tpl_file, $mask) {
		global $tpl_cache_info, $site_ways;
		if(!file_exists($tpl_file))
			return View::Get("404.html");
		if(!isset($tpl_cache_info)) $tpl_cache_info = array();
		if(file_exists(MCR_ROOT . "{$site_ways['cache']}tpl_cache_info.php"))include_once MCR_ROOT . "cache/tpl_cache_info.php";
		if(isset($tpl_cache_info[$mask])){
			$info = explode("<::>", $tpl_cache_info[$mask]);
		}
		if(!isset($tpl_cache_info[$mask]) or ($info[0] < time() and $info[1] != ($tpl_md5 = md5_file($tpl_file)))) {
			$parsed = self::ParseText(file_get_contents($tpl_file));
			file_put_contents(MCR_ROOT . "{$site_ways['cache']}$mask.php", $parsed);
			$tpl_cache_info['updated'] = true;
			$tpl_cache_info[$mask] = time() + 1800 . "<::>" . ($tpl_md5 = md5_file($tpl_file));
		} elseif ($info[0] < time() and $info[1] == ($tpl_md5 = md5_file($tpl_file))) {
			$tpl_cache_info['updated'] = true;
			$tpl_cache_info[$mask] = time() + 1800 . "<::>" . $tpl_md5;
		}
		return MCR_ROOT . "{$site_ways['cache']}$mask.php";
	}
	public static function UpdateCacheInfo() {
		global $tpl_cache_info, $site_ways;
		$tpl_cache_info['updated'] = false;

		$txt = '<?php'.PHP_EOL;
		$txt .= '$tpl_cache_info = '.var_export($tpl_cache_info, true).';'.PHP_EOL;
		$txt .= '/* This file was auto-generated by '.PROGNAME.' */'.PHP_EOL;
		$txt .= '?>';

		if (file_put_contents(MCR_ROOT . "{$site_ways['cache']}tpl_cache_info.php", $txt) === false)
			return false;

		return true;
	}
}